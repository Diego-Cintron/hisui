Hisui Documentation:

Here you will find all the methods currently supported by the language as well as a small description as to what each
method does.

Math ==========================================================
parameter1 + parameter2         ----> returns the sum of two parameters or numbers

parameter1 - parameter2         ----> returns the subtraction of two parameters

parameter1 * parameter2         ----> returns the product of two parameters

parameter1 / parameter2         ----> returns the division of two parameters

parameter1 ^ parameter2         ----> returns the result of elevating the first parameter to the power of the second

parameter1 % parameter2         ----> returns the module of two parameters

-parameter                      -----> returns the opposite value of a parameter


Basic Variable Declaration ====================================
variable = {integer}            ----> creates an integer variable with the integer value given

variable = {float}              ----> creates a floating-point variable with the floating-point value given

variable = {string}             ----> creates a string variable with the string given


Conditionals ===================================================
parameter1 < parameter2         ----> returns true if the value of parameter1 is less than the value of parameter2

parameter1 > parameter2         ----> returns true if the value of parameter1 is greater than the value of parameter2

parameter1 <= parameter2        ----> returns true if the value of parameter1 is less than or equal to the value of
                                      parameter2

parameter1 >= parameter2        ----> returns true if the value of parameter1 is greater than or equal to the value
                                      of parameter2

parameter1 == parameter2        ----> returns true if the value of parameter1 is equal to the value of parameter2


Functions ===========================================================
function foo(): statement       ----> declares the function foo and assigns it a statement

foo()                           ----> calls the function foo and runs the statement assigned to it


If statements ========================================================
if condition then statement1 else statement2 ----> checks the boolean value of the condition given; if true, runs the
                                                   statement1. Otherwise runs the statement2

Loops ===============================================================
while condition then statement  ----> checks the boolean value of the condition given; if true, repeatedly runs
                                      the statement given until the condition is false

for variable = {i} to {j} then statement ----> Assigns number given to the variable given. If the value of the variable
                                               is less than the value of the given j, then runs the statement and
                                               increases the value of the variable by 1. This repeats until the value
                                               of the variable is equal to or larger than the given j

Lists ===================================================
variable = list[]               ----> creates an empty list

variable = list[1,2,3,.....,n]  ----> creates an array containing n elements

variable[index]                 ----> returns element at index position

variable[index] = element       ----> changes element at index position

variable.size()                 ----> returns the size of a list

variable.remove(index)          ----> removes the element at the specified index

variable.add(element)           ----> adds the element to the end of the list

variable.sort()                 ----> sorts the element in the list


Shapes ===================================================
variable = square(s)            ----> creates a square of sides s

variable = rectangle(l,w)       ----> creates a rectangle of length l and width w

variable = triangle(o,a,h,t)    ----> creates a triangle with either sides of opposite (o) , adjacent (a) and hypotenuse
                                     (h) or the angle theta (t). Enter 0 for unknown parameters.

variable.opposite()             ----> returns the calculated opposite side, using either the adjacent or hypotenuse side
                                      and the angle theta (for triangle objects only)

variable.adjacent()             ----> returns the calculated adjacent side, using either the opposite or hypotenuse side
                                      and the angle theta (for triangle objects only)

variable.hypotenuse()           ----> returns the calculated adjacent side, using either the opposite or adjacent side
                                      and the angle theta (for triangle objects only)

variable.perimeter()            ----> returns the perimeter of the shape (circle excluded)

variable.area()                 ----> returns the area of the shape

variable.circle(r)              ----> creates a circle of radius r

variable.diameter()             ----> returns the diameter (for circle objects only)

variable.circumference()        ----> returns the circumference (for circle objects only)


Vectors =====================================================================

variable = vector(x,y,z)        ----> creates a vector of x, y and optional z components

variable.dot( vector )          ----> returns the dot product of two vectors

variable.cross( vector )        ----> returns the cross product of two vectors

variable.xc()                   ----> returns the x component of a vector

variable.yc()                   ----> returns the y component of a vector

variable.zc()                   ----> returns the z component of a vector


Matrix ======================================================================

variable = matrix([a,b,c],[d,e,f],[g,h,i]) --> creates a 3x3 matrix with the given elements, currently only 3x3 matrix
                                               are supported

variable.printMatrix()          ----> prints the matrix

variable.mAdd(matrix2)          ----> adds all the elements of matrix B to matrix A

variable.mSub(matrix2)          ----> subtracts all the elements of matrix B to matrix A

variable.mMult(matrix2)         ----> multiplies all the elements of matrix B to matrix A

variable.mDiv(matrix2)          ----> divides all the elements of matrix B to matrix A

variable.mPow(exponent)         ----> raises all elements of a matrix to the given exponent

variable.determinant()          ----> returns the determinant of the matrix


Dictionaries ================================================================

variable = dictionary{key;value,key2;value2.........kn;vn} -> creates a dictionary with n number of keys and values

variable.get(key)               ----> returns value corresponding to the specified key

variable.getKeys()              ----> returns a list of all keys in the dictionary

variable.getValues()            ----> returns a list of all values in the dictionary

